c
(knowledge + no_knowledge).between?(TOLERANCE, audience_count + TOLERANCE)
OLERANCE, audience_count + TOLERANCE
knowledge + no_knowledge
c
(knowledge + no_knowledge).between?(TOLERANCE, audience_count + TOLERANCE)
audience_count + TOLERANCE
TOLERANCE
knowledge + no_knowledge
c
audience_count + TOLERANCE
audience_count
knowledge + no_knowledge
c
(audience_count).between?(answers - TOLERANCE, answers + TOLERANCE)
audience_count
c
audience_count
answers
c
answers
c
EXPECTED_AUDIENCE_COUNT
knowledge + no_knowledge
c
audience_count + TOLERANCE
audience_count - TOLERANCE
knowledge + no_knowledge
c
AUDIENCE_COUNT
c
AUDIENCE_COUNT
c
AUDIENCE_COUNT
c
AUDIENCE_COUNT
return false if audience_count == 0 || audience_count == nil
audience_count == 0 || audience_count == nil
audience_count == 0 || nil
audience_count
n
speaker_count
c
audience_count
c
audience_count
c
audience_count + TOLERANCE
(knowledge + no_knowledge).between?(audience_count - TOLERANCE, audience_count + TOLERANCE)
audience_count - TOLERANCE
audience_count
c
audience_count
TOLERANCE
audience_count - TOLERANCE
knowledge + no_knowledge
c
TOLERANCE
knowledge + no_knowledge
c
audience_count
audience_count + TOLERANCE
TOLERANCE
audience_count - TOLERANCE
knowledge + no_knowledge
knowledge + no_knowledge)
quit
c
n
knowledge
audience_count
speaker_count
c
[audience_count, knowledge, no_knowledge, speaker_count].any? { |input| !input.is_a?(Integer) }
c
audience_count
c
audience_count
c
SPEAKER_COUNT
c
SPEAKER
c
audience_total
c
audience_total
c
audience_total
c
audience_total
c
audience_total
c
audience_total
c
audience_total + TOLERANCE
audience_total - TOLERANCE
knowledge + no_knowledge + SPEAKER_COUNT
